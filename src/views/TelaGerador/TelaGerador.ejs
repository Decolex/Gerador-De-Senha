<!DOCTYPE html>
<html lang="en" >
<head>
  <meta charset="UTF-8">
  <title>Gerador de Senhas</title>
  <link rel='stylesheet' href='https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500&amp;display=swap'>
  <link rel='stylesheet' href='https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200'>
  <link rel="stylesheet" href="/css/TelaGerador.css">

</head>
<body>

<section>
  <div class="container">
  
    <h2>Gerador de Senha</h2>
  
    <div class="wrapper">
  
      <!-- BOTAO DE COPIAR -->
      <div class="input-box">
  
        <input type="text" disabled>
        <span class="material-symbols-rounded">copy_all</span>
  
      </div>

      <!-- INDICADOR -->
      <div class="pass-indicator"></div>

      <!-- COMPRIMENTO DA SENHA -->
      <div class="pass-length">

        <div class="details">

          <label class="title">Comprimento da Senha</label>
          <!-- APARECER TEXTO -->
          <span></span>
          
        </div>
        <!-- DEFINIR A QUANTIDADE DE CARACTERES DA SENHA E SUA "FORÇA" -->
        <input type="range" min="1" max="30" value="15" step="1">
      </div>

      <!-- CONFIGURAÇÃO DA SENHA -->
      <div class="pass-settings">
        
        <label class="title">Configuração da Senha</label>

        <!-- COMEÇO DA LISTA -->
        <ul class="options">
          <li class="option">

            <input type="checkbox" id="lowercase" checked>
            <label for="lowercase">Minúsculas (a-z)</label>

          </li>

          <li class="option">

            <input type="checkbox" id="uppercase">
            <label for="uppercase">Maiuscúlas (A-Z)</label>

          </li>

          <li class="option">

            <input type="checkbox" id="numbers">
            <label for="numbers">Números (0-9)</label>

          </li>

          <li class="option">

            <input type="checkbox" id="symbols">
            <label for="symbols">Símbolos (!-$^+)</label>
            
          </li>

          <li class="option">

            <input type="checkbox" id="exc-duplicate">
            <label for="exc-duplicate">Tirar duplicação</label>

          </li>

          <li class="option">

            <input type="checkbox" id="spaces">
            <label for="spaces">Colocar Espaços</label>

          </li>
        </ul>
        <!-- FIM DA LISTA -->
      </div>

      <div class="btn">
        <!-- BOTAO GERAR SENHA -->
      <div>

          <button class="generate-btn">Gerar Senha</button>

      </div>
        <!-- BOTAO GUARDAR SENHA -->
        <div>
          
          <button class="save-btn"> Guardar Senha</button>
          
        </div> 
      </div>
  
    </div>
  </div>
</section>

<!-- teste -->
<div class="container-table">
  <h2>Tabela de Senhas</h2>
  <table class="table-float">
    <thead>
      <tr>
        <th>Senha Oculta</th>
        <th>Senha Visível</th>
        <th>Ações</th>
      </tr>
    </thead>
    <tbody>

    </tbody>
  </table>
</div>



<script>
  const lengthSlider = document.querySelector(".pass-length input"),
    options = document.querySelectorAll(".option input"),
    copyIcon = document.querySelector(".input-box span"),
    passwordInput = document.querySelector(".input-box input"),
    passIndicator = document.querySelector(".pass-indicator"),
    generateBtn = document.querySelector(".generate-btn");

  const characters = {
    lowercase: "abcdefghijklmnopqrstuvwxyz",
    uppercase: "ABCDEFGHIJKLMNOPQRSTUVWXYZ",
    numbers: "0123456789",
    symbols: "^!$%&|[](){}:;.,*+-#@<>~"
  };

  const generatePassword = () => {
    let staticPassword = "",
      randomPassword = "",
      excludeDuplicate = false,
      passLength = lengthSlider.value;

  options.forEach((option) => {
    if (option.checked) {
      if (option.id !== "exc-duplicate" && option.id !== "spaces") {
        staticPassword += characters[option.id];
      } else if (option.id === "spaces") {
        staticPassword += `  ${staticPassword}  `;
      } else {
        excludeDuplicate = true;
      }
    }
  });

  for (let i = 0; i < passLength; i++) {
    let randomChar =
      staticPassword[Math.floor(Math.random() * staticPassword.length)];
    if (excludeDuplicate) {
      !randomPassword.includes(randomChar) || randomChar == " "
        ? (randomPassword += randomChar)
        : i--;
    } else {
      randomPassword += randomChar;
    }
    }
    passwordInput.value = randomPassword;
  };

  const updatePassIndicator = () => { 
    passIndicator.id =
      lengthSlider.value <= 8
        ? "weak"
        : lengthSlider.value <= 16
        ? "medium"
        : "strong";
  };

  const updateSlider = () => {
    document.querySelector(".pass-length span").innerText = lengthSlider.value;
    generatePassword();
    updatePassIndicator();
  };
  updateSlider();

  const copyPassword = () => {
    navigator.clipboard.writeText(passwordInput.value);
    copyIcon.innerText = "check";
    copyIcon.style.color = "#4285F4";
    setTimeout(() => {
    copyIcon.innerText = "copy_all";
    copyIcon.style.color = "#707070";
  }, 1500);
  };

  document.querySelectorAll('.toggle-btn').forEach(button => {
    button.addEventListener('click', () => {
    const row = button.closest('tr');
    const senhaOculta = row.querySelector('.senha-oculta');
    const senhaVisivel = row.querySelector('.senha-visivel');
    const icon = button.querySelector('i');

    if (senhaOculta.style.display === 'none') {
      senhaOculta.style.display = 'block';
      senhaVisivel.style.display = 'none';
      icon.classList.replace('fa-eye', 'fa-eye-slash');
      button.textContent = ' Mostrar';
      button.prepend(icon);
    } else {
      senhaOculta.style.display = 'none';
      senhaVisivel.style.display = 'block';
      icon.classList.replace('fa-eye-slash', 'fa-eye');
      button.textContent = ' Ocultar';
      button.prepend(icon);
    }
  });
  });

// -------------------------
  copyIcon.addEventListener("click", () => {
  passwordInput.select();
  document.execCommand("copy");
  alert("Senha copiada: " + passwordInput.value);
});
// ---- tabela
  const saveBtn = document.querySelector(".save-btn");
  const passwordTable = document.querySelector("tbody");

  saveBtn.addEventListener("click", () => {
  const password = passwordInput.value;
  if (password) {
    const newRow = document.createElement("tr");
    newRow.innerHTML = `
      <td><input type="password" value="${password}" class="senha-oculta" readonly></td>
      <td><input type="text" value="${password}" class="senha-visivel" readonly style="display: none;"></td>
      <td><button class="toggle-btn"><i class="fa fa-eye-slash"></i> Mostrar</button></td>
    `;
    passwordTable.appendChild(newRow);
    
    document.querySelectorAll('.toggle-btn').forEach(button => {
      button.addEventListener('click', () => {
        const row = button.closest('tr');
        const senhaOculta = row.querySelector('.senha-oculta');
        const senhaVisivel = row.querySelector('.senha-visivel');
        const icon = button.querySelector('i');
    
        if (senhaOculta.style.display === 'none') {
          senhaOculta.style.display = 'block'; // Exibe a senha oculta
          senhaVisivel.style.display = 'none'; // Oculta a senha visível
          icon.classList.replace('fa-eye', 'fa-eye-slash'); // Troca o ícone
          button.textContent = ' Mostrar'; // Atualiza o texto do botão
        } else {
          senhaOculta.style.display = 'none'; // Oculta a senha
          senhaVisivel.style.display = 'block'; // Exibe a senha visível
          icon.classList.replace('fa-eye-slash', 'fa-eye'); // Troca o ícone
          button.textContent = ' Ocultar'; // Atualiza o texto do botão
        }
      });
    });
    
  
}});

  copyIcon.addEventListener("click", copyPassword);
  lengthSlider.addEventListener("input", updateSlider);
  generateBtn.addEventListener("click", generatePassword);

</script>
</body>
</html>
